@page "/MyComponents/bindprop"
<div class="row">
    <h3 class="text-success">Product</h3><hr />
<div class="col-6 border p-3">
    <h3 class="text-primary">Product summary</h3><hr />
    Name:@Product.Name<br />
    Active:@Product.IsActive<br />
    Price: @Product.Price <br />
    This product is: @(Product.IsActive ? "Active" : "InActive")<br />
    @*Property Selected: @selectedProp<br />
    @if (!String.IsNullOrWhiteSpace(selectedProp))
    {
        <p>Property Value: @Product.ProductProp.FirstOrDefault(u=>u.Key==selectedProp).Value</p>
    }*@
</div>
<br />

<div class="col-6 border p-3">
        <h3 class="text-primary">Product prorerties</h3><hr />
    New Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /><br />
    @*New Price: <input type="number" @bind="@Product.Price" @bind:event="oninput"/>*@
    Active: <input type="checkbox" @bind-value="@Product.IsActive" @bind-value:event="oninput" /><br />
    Product Properties:
    <select @bind="selectedProp">
        @foreach (var prop in Product.ProductProp)
        {
            <option value="@prop.Key">@prop.Key</option>
        }
    </select>
</div>
</div>

<div class="row">
    <h3 class="text-success">Product Table</h3><hr />
        
        <div class="col-6 border p-3">
            @foreach (var prop in Products)
            {
                <input type="text" @bind-value="@prop.Name" @bind-value:event="oninput" />

                <br />
            }
        </div>
    <div class="col-6 border p-3">
            @foreach (var prop in Products)
            {
                <input type="number" @bind-value="@prop.Price" @bind-value:event="oninput" /><br />
            }
        </div>
</div>
<div class="row">
    <h3 class="text-success">Product Summary</h3><hr />
    <div class="col-6 p-3">
        @foreach (var prod in Products)
        {
            <p>@prod.Name @prod.Price @prod.IsActive</p>
        }
    </div>
    <div class="col-6 p-3">
        @foreach (var prod in Products)
        {
            <input type="checkbox" @bind-value="@prod.IsActive" @bind-value:event="oninput" />

            <br />
        }
    </div>
</div>

@code {
    private string selectedProp = "";
    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Roses",
            IsActive = false,
            Price = 10.99,
            ProductProp = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp {Id = 1, Key = "Color", Value = "Black"},
                new Demo_ProductProp {Id = 2, Key = "Flavor", Value = "Rose Jasmine"},
                new Demo_ProductProp {Id = 3, Key = "Size", Value = "20oz"},
            }
        };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
        {
                Id = 1,
                Name = "Roses",
                IsActive = false,
                Price = 15.50,
                ProductProp = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp {Id = 1, Key = "Color", Value = "Red"},
                new Demo_ProductProp {Id = 2, Key = "Flavor", Value = "Rose Jasmine"},
                new Demo_ProductProp {Id = 3, Key = "Size", Value = "20oz"},
            }
        });
        Products.Add(new()
            {
                Id = 2,
                Name = "Lily",
                IsActive = false,
                Price = 10.99,
                ProductProp = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp {Id = 1, Key = "Color", Value = "White"},
                new Demo_ProductProp {Id = 2, Key = "Flavor", Value = "Lily Blossom"},
                new Demo_ProductProp {Id = 3, Key = "Size", Value = "30oz"},
            }
            });
    }
}
